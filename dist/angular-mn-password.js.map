{"version":3,"sources":["mn-passwor/mn-password.directive.js","app.js"],"names":["MnPasswordDirective","$compile","$parse","link","scope","element","attributes","dirtyInput","querySelector","removeChild","input","find","value","ngModel","attr","restrict","require","angular","module","$inject","directive"],"mappings":"YAIA,SAASA,qBAAoBC,SAAUC,QAOrC,QAASC,MAAKC,MAAOC,QAASC,YAC5B,GAAMC,YAAaF,QAAQ,GAAGG,cAAc,gBACxCD,aACFF,QAAQ,GAAGI,YAAYF,WAEzB,IAAMG,OAAQL,QAAQM,KAAK,QAC3BN,SAAQ,GAAGO,MAAQV,OAAOI,WAAWO,SAAST,OAC9CM,MAAMI,KAAK,WAAYR,WAAWO,SAClCZ,SAASS,OAAON,OAdlB,OACEW,SAAU,IACVZ,KAAAA,KACAa,QAAS,WCRbC,QAAQC,OAAO,kBDCflB,oBAAoBmB,SAAW,WAAY,UAD3CF,QACGC,OAAO,eACPE,UAAU,aAAcpB","file":"angular-mn-password.js","sourcesContent":["angular\n  .module('mn-password')\n  .directive('mnPassword', MnPasswordDirective)\n\nfunction MnPasswordDirective($compile, $parse) {\n  return {\n    restrict: 'E',\n    link,\n    require: 'ngModel',\n  }\n\n  function link(scope, element, attributes) {\n    const dirtyInput = element[0].querySelector('input + input')\n    if (dirtyInput) {\n      element[0].removeChild(dirtyInput)\n    }\n    const input = element.find('input')\n    element[0].value = $parse(attributes.ngModel)(scope)\n    input.attr('ng-model', attributes.ngModel)\n    $compile(input)(scope)\n  }\n}\n","angular.module('mn-password', [])\n"]}